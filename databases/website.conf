@{nocompress all}

@{if !model.ssl && model.redirect.length}
server {
	listen         80;
	@{foreach m in model.redirect}
	server_name    @{m.superadmin_redirect()};
	@{end}
	rewrite        ^ http://@{model.url}$request_uri? permanent;
}
@{fi}

server {

	listen         80;
	server_name    @{model.url};

	@{if model.second}
	server_name    @{model.second};
	@{fi}

	charset        utf-8;

	location ^~ /.well-known/acme-challenge/ {
		default_type "text/plain";
		root /www/acme/;
		break;
	}

	@{model.nginx}
	client_max_body_size 1M;

	@{foreach m in model.subprocesses}
	location @{m.path} {

	@{if m.disallow.length}
		@{foreach r in m.disallow}
		deny                @{r};
		@{end}
	@{fi}

	@{if m.allow.length}
		@{foreach r in m.allow}
		allow               @{r};
		@{end}
	@{fi}

		client_max_body_size @{m.size}M;
		limit_req zone=ddos burst=@{m.ddos} nodelay;
		proxy_set_header    Host $http_host;
		proxy_set_header    X-Forwarded-For $remote_addr;
		proxy_set_header    X-Forwarded-Protocol $scheme;
		proxy_set_header    X-NginX-Proxy true;
		proxy_set_header    Upgrade $http_upgrade;
		proxy_set_header    Connection "upgrade";
		proxy_redirect      off;
		proxy_http_version  1.1;
		proxy_buffering     off;
		proxy_cache_bypass  $http_upgrade;
		proxy_cache_key     sfs$request_uri$scheme;
		proxy_pass_header   X-Ping;
		proxy_pass          http://127.0.0.1:@{m.port};
		break;
	}
	@{end}

	location / {

	@{if model.disallow.length}
		@{foreach m in model.disallow}
		deny                @{m};
		@{end}
	@{fi}

	@{if model.allow.length}
		@{foreach m in model.allow}
		allow               @{m};
		@{end}
	@{fi}

		client_max_body_size @{model.size}M;
		limit_req zone=ddos burst=@{model.ddos} nodelay;
		proxy_set_header    Host $http_host;
		proxy_set_header    X-Forwarded-For $remote_addr;
		proxy_set_header    X-Forwarded-Protocol $scheme;
		proxy_set_header    X-NginX-Proxy true;
		proxy_set_header    Upgrade $http_upgrade;
		proxy_set_header    Connection "upgrade";
		proxy_redirect      off;
		proxy_http_version  1.1;
		proxy_buffering     off;
		proxy_cache_bypass  $http_upgrade;
		proxy_cache_key     sfs$request_uri$scheme;
		proxy_pass_header   X-Ping;
		proxy_pass          http://127.0.0.1:@{model.port};
		break;
	}
}